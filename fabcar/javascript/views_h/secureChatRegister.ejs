<!DOCTYPE html>
<html lang="en">
<head>
  <title>Secure Chat Register</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="./bootstrap-5.1.3-dist/css/bootstrap.min.css">
  <script src="./bootstrap-5.1.3-dist/js/jquery.slim.min.js"></script>
  <script src="./bootstrap-5.1.3-dist/js/popper.min.js"></script>
  <script src="./bootstrap-5.1.3-dist/js/bootstrap.bundle.min.js"></script>
</head>
<body>
  <div class="container">
    <h2>DANG KY CHAT MA HOA DAU CUOI</h2>
    <p>Nhap chuoi ky tu bi mat tao khoa bi mat. Quy vi chu y luu lai chuoi ky tu bi mat da nhap!</p>
    <form>
      <div class="form-group">
        <textarea class="form-control" rows="5" placeholder="Input Key String" id="privKey"></textarea>
      </div>
      <div>
        <button type="button" onclick="generateKey()" class="btn btn-primary input-btn" >Generate Key</button>
        <button type="button" onclick="registerKey()" class="btn btn-primary input-btn" >Register Key</button>
        <button type="button" onclick="saveSecretKey()" class="btn btn-success input-btn" >Save Key</button>
      </div>
    </form>
  </div>

</body>
</html>
<script type="text/javascript" src="./js/cryptico.js"></script>
<script type="text/javascript" src="./js/rsa.js"></script>
<script type="text/javascript" src="./js/jsbn.js"></script>
<script type="text/javascript" src="./js/helper.js"></script>
<script>
    var myID_json = sessionStorage.getItem('login_data');
    
    if(myID_json==null){
        if(window.confirm('ban khong co quyen truy cap!!!')){
            window.location.href='/';
        }
        else
        {
            window.location.href='/';
        }
    }
    else
    {
      var myID = JSON.parse(myID_json)['id'];
        var accessToken = JSON.parse(myID_json).accessToken;
        var refreshToken = JSON.parse(myID_json).refreshToken;
    }
    
    
    window.onload = async function(){
        const options = {
            method: 'GET',
            headers: {
                'authorization': 'token '+ accessToken
            }
        };
        var res= await fetch('/authenOnLoad', options);
        var res_json = await res.json();
        if(!res || res.status!=200)
        {
            if(window.confirm('ban khong co quyen truy cap!!!')){
                window.location.href='/';
            }
            else
            {
                window.location.href='/';
            }
        }
        
    }

    function download(filename, text) {
        var pom = document.createElement('a');
        pom.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));
        pom.setAttribute('download', filename);

        if (document.createEvent) {
            var event = document.createEvent('MouseEvents');
            event.initEvent('click', true, true);
            pom.dispatchEvent(event);
        }
        else {
            pom.click();
        }
    }
    async function generateKey(){
      var keyString = document.getElementById('privKey').value; 
      var Bits = 1024; 
 
      var MessRSAkey = cryptico.generateRSAKey(keyString, Bits); console.log(MessRSAkey);

      var MessRSAkeyPublic = cryptico.publicKeyString(MessRSAkey); console.log(MessRSAkeyPublic)

      let serialKey = serializeRSAKey(MessRSAkey); 
      sessionStorage.setItem('privKeyRSA', serialKey);
      alert('generate Key successfully!');
      
    }
    async function registerKey(){
      var keyString = document.getElementById('privKey').value; 
      if(sessionStorage.getItem('privKeyRSA')){
        let RSAkey = deserializeRSAKey(sessionStorage.getItem('privKeyRSA'));
        let publicKey_serial = cryptico.publicKeyString(RSAkey); console.log(publicKey_serial)
      }
    }

    function saveSecretKey(){
      var keyString = document.getElementById('privKey').value; 
      download('keyString', keyString);
    }
</script>