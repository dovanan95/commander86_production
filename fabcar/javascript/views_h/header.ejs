<!DOCTYPE html>
<html>

<head>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <!-- <link href='https://unpkg.com/boxicons@2.1.1/css/boxicons.min.css' rel='stylesheet'>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@600;200&display=swap" rel="stylesheet"> -->
  <link rel="stylesheet" href="./fontawesome-free-6.1.1-web/css/all.min.css">
  <link rel="stylesheet" href="./css/privateKey.css">
  <link rel="stylesheet" href="./css/call.css">
  <style>
    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    body {
      min-height: 100vh;
      width: 100%;
      /* display: flex; */
      overflow: hidden;
    }

    .sidebar {
      width: 80px;
      background: #11101d;
      height: 100%;
      position: fixed;
      top: 0;
      left: 0;
      display: flex;
      flex-direction: column;
      transition: all 0.4s ease;
      z-index: 100;
    }

    .sidebar.active {
      width: 380px;
      padding: 6px 14px;
    }

    .sidebar .logo-content {
      display: flex;
      flex-wrap: nowrap;
      justify-content: center;
      margin: 15px 0;
      align-items: center;
      transition: all 0.4s ease;
    }

    .sidebar.active .logo-content {
      justify-content: space-between;
    }

    .sidebar .logo-content span {
      display: none;
      transition: all 0.7s ease;
      color: #fff;
      font-size: 25px;
      font-family: 'Poppins', sans-serif;
    }

    .sidebar.active .logo-content span {
      display: block;
    }

    .sidebar #menu-btn {
      font-size: 25px;
      color: #fff;
      right: 0;
    }

    .sidebar ul {
      margin-top: 20px;
      padding: 6px 14px;
    }

    .sidebar.active ul {
      padding: 0;
    }

    .sidebar ul li {
      list-style: none;
      color: #fff;
      width: 100%;
      margin: 0px 5px 0 0;
      line-height: 50px;
      position: relative;
      /* display: flex; */
    }
    .sidebar li .tooltip {
      position: absolute;
      top: -20px;
      left: calc(100% + 15px);
      z-index: 100;
      background: #fff;
      font-size: 10px;
      color: black;
      box-shadow: 0 5px 10px rgba(0, 0, 0, 0.3);
      padding: 14px 15px;
      border-radius: 4px;
      font-size: 14px;
      font-weight: 400;
      opacity: 0;
      white-space: nowrap;
      pointer-events: none;
      transition: 0s;
      width: fit-content;
      margin: 0;
      line-height: 0;
    }

    .sidebar li:hover .tooltip {
      opacity: 1;
      pointer-events: auto;
      transition: all 0.4s ease;
      top: 40%;
      transform: translateY(-50%);
    }

    .sidebar.active li .tooltip {
      display: none;
    }
    .sidebar ul li input {
      position: absolute;
      width: 0;
      border-radius: 12px;
      min-height: 50px;
      top: 0;
      left: 0;
      outline: none;
      border: none;
      background: #1d1b31;
      padding-left: 50px;
      font-size: 18px;
      color: #fff;
      transition: all 0.3s ease-in-out;
      /* opacity: 0;
    visibility: hidden;  */
    }

    .sidebar.active ul li input {
      width: 100%;
      /* opacity: 1;
    visibility: visible; */
    }

    .sidebar ul li .bx-search-alt-2 {
      position: absolute;
      z-index: 99;
      color: #fff;
      top: 0;
      transition: all 0.4s ease;
      font-size: 19px;
    }

    .sidebar ul li i.bx-search-alt-2:hover {
      background-color: #fff;
      color: #1d1b31;
      pointer-events: auto;
      cursor: pointer;
    }

    .sidebar.active ul li i.bx-search-alt-2:hover {
      pointer-events: unset;
      cursor: unset;
      background-color: #1d1b31;
      color: #fff;
    }

    .a {
      display: inline-block;
      max-height: 50px;
      margin-bottom: 20px;
    }

    .sidebar ul li a {
      text-decoration: none;
      color: #fff;
      display: flex;
      align-items: center;
      border-radius: 12px;
    }

    /* .sidebar ul li a:hover {
    background-color: #fff;
    color: #1d1b31;
  } */

    .sidebar ul li i {
      border-radius: 12px;
      min-width: 50px;
      min-height: 50px;
      line-height: 50px;
      text-align: center;
      font-size: 17px;
    }

    .sidebar ul li a:hover {
      color: #11101d;
      background-color: #fff;
      border-radius: 12px;
      transition: all 0.4s ease;
    }

    .sidebar.active .link-items {
      opacity: 1;
      display: block;
      min-width: 100%;
      transform: translateX(0px);
    }

    .sidebar .link-items {
      opacity: 0;
      /* transform: translateX(-50%); */
      /* transition: all 0.3s ; */
    }

    .logout-form {
      display: flex;
      flex-direction: column;
      justify-content: flex-end;
      width: 100%;
      height: 100%;
    }

    .logout-form a {
      color: #fff;
      text-decoration: none;
      background-color: #1d1b31;
      border-radius: 12px;
      display: flex;
      align-items: center;
      margin: 6px 14px;
    }

    .logout-form i {

      min-width: 50px;
      min-height: 50px;
      line-height: 50px;
      font-size: 20px;
      text-align: center;
    }

    .logout-form span {
      opacity: 0;
      width: 0%;
      transition: width 0.4s;
      text-align: center;
      font-size: 18px;
    }

    .sidebar.active .logout-form span {
      opacity: 1;
      width: 100%;
    }

    #exist {
      display: none;
    }

    #exist.actice-search {
      display: block;
    }

    .modal_incoming_call {
        display: none;
        /* Hidden by default */
        position: fixed;
        /* Stay in place */
        z-index: 1000;
        /* Sit on top */
        padding-top: 100px;
        /* Location of the box */
        left: 0;
        top: 0;
        width: 100%;
        /* Full width */
        height: 100%;
        /* Full height */
        overflow: auto;
        /* Enable scroll if needed */
        background-color: rgb(0, 0, 0);
        /* Fallback color */
        background-color: rgba(0, 0, 0, 0.4);
        /* Black w/ opacity */
    }
  </style>
</head>

<body>

  <div class="sidebar">
    <div class="logo-content">
      <span>Vien10</span>
      <i class="fa-solid fa-bars" id="menu-btn"></i>
    </div>
    <ul>
      <li id="search-bar">
        <div class="a">
          <i class="fa-solid fa-magnifying-glass bx-search-alt-2"></i>
          <input type="text" id="input_ID" placeholder="Search...">
          <span id="exist"></span>
        </div>
        <span class="tooltip">Search</span>

        <!-- <a href="/home">
        <i class='bx bx-search-alt-2'></i>
        <span class="link-items">Search</span>
      </a> -->
      </li>
      <li>
        <a href="/chat">
          <i class="fa-solid fa-message"></i>
          <span class="link-items">Messages</span>
        </a>
        <span class="tooltip">Messages</span>

      </li>
      <li>
        <a href="/newGroup">
          <i class="fa-solid fa-user-group"></i>
          <span class="link-items">Group</span>
        </a>
        <span class="tooltip">Group</span>

      </li>
      <li>
        <a href="#channel">
          <i class="fa-solid fa-tv"></i>
          <span class="link-items">Channels</span>
        </a>
        <span class="tooltip">Channels</span>

      </li>
      <li>
        <a onclick="openSecure()" >
          <i class="fa-solid fa-unlock-keyhole"></i>
          <span class="link-items">Encrypted</span>
        </a>
        <span class="tooltip">Encrypted</span>

      </li>
    </ul>
    <div class="logout-form">
      <a href="./">
        <i class="fa-solid fa-arrow-right-from-bracket"></i>
        <span class="logout-text">Logout</span>
      </a>
    </div>
  </div>
  </div>

  <div id="privKeyModal" class="privKey-modal">

    <!-- Modal content -->
    <div class="privKey-modal-content">
      <div class="privKey-modal-header">
        <span class="closeprivKeyModal" id="closeprivKeyModal">&times;</span>
        <h2>INSERT PRIVATE KEY</h2>
      </div>
      <div class="privKey-modal-body" id="privKey-body">
        <div>
            <textarea id="PrivKeycontent" name="content" placeholder="Write Private Key.."></textarea>
        </div>
        <br />
        <div>
            <button onclick="checkAndSaveKey()" id="button_send_privKey_header" style="  background-color: #04AA6D;
                color: white;
                padding: 12px 20px;
                border: none;
                border-radius: 4px;
                cursor: pointer;">SEND</button>
            <button onclick="window.open('/registerE2EService')" id="button_regAgain_privKey_header" style="  background-color: #04AA6D;
                color: white;
                padding: 12px 20px;
                border: none;
                border-radius: 4px;
                cursor: pointer;">DANG KY LAI</button>
        </div>
      </div>

    </div>
  
  </div>

              <!-- to show incommming call and accept -->
              <div id="answer" class="modal_incoming_call"  >
                <div class="incomingWrapper">
                    <div class="itemWrapper">
                        <h2>Incomming Call</h2>
                    </div>
                    <div class="itemWrapper">
                        <img id="profileImageA" style="padding: 30px; width: 140px; height: 140px;"
                            src="./img/profile.png" alt="">
                    </div>
                    <div class="itemWrapper">
                        <h2 style="line-height: 0px;"><span id="callerName"></span></h2>
                    </div>
                    <div class="itemWrapper" style="display: flex; flex-direction: row; margin-bottom: 20px; margin-top: 50px;">
                        <button class="actionButton" onclick="answer()">Answer</button>
                    </div>
                </div>
            </div>
</body>

</html>
<script type="text/javascript" src="./js/cryptico.js"></script>
<script type="text/javascript" src="./js/helper.js"></script>
<script type="text/javascript" src="./jquery-3.6.0.js"></script>
<script type="text/javascript" src="./socket.io.min.js"></script>
<script>

    var myID_json = sessionStorage.getItem('login_data');
        var myID = parseInt(JSON.parse(myID_json)['id']);
        var my_name = JSON.parse(myID_json)['my_username'];
        var accessToken = JSON.parse(myID_json).accessToken;
        var refreshToken = JSON.parse(myID_json).refreshToken;
    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function(event) {
    var privKeyModal = document.getElementById("privKeyModal");
        if (event.target == privKeyModal) {
          privKeyModal.style.display = "none";
        }
    }
    document.getElementById('closeprivKeyModal').addEventListener('click', function(e){
        privKeyModal.style.display = "none";
    })
    var socket=io({auth:{'token': accessToken}});
    socket.emit('connected', {'userID':myID});
    var incom_call_data;
    socket.on('newCall', data=>{
        //when other called you
        console.log(data);
        //show answer button
        incom_call_data=data;
        var otherUser = data.caller;
        var remoteRTCMessage = data.rtcMessage;
        sessionStorage.setItem('callerID', data.callerID);
        document.getElementById("callerName").innerHTML = otherUser;
        //document.getElementById("call").style.display = "none";
        document.getElementById("answer").style.display = "block";
    })

    function answer()
    {
        document.getElementById("answer").style.display = "none";
        var callerID = sessionStorage.getItem('callerID');
        console.log(incom_call_data);
        var answerWindow= window.open('/call?partnerID='+callerID+'&docType=private_message&call=callee');
        answerWindow.incom_call_data = incom_call_data;
    }

    async function openSecure(){
      var myID_json = sessionStorage.getItem('login_data');
        var myID = parseInt(JSON.parse(myID_json)['id']);
        var accessToken = JSON.parse(myID_json).accessToken;
        var refreshToken = JSON.parse(myID_json).refreshToken;
      if(sessionStorage.getItem('privKeyRSA'))
      {
        var privKey = sessionStorage.getItem('privKeyRSA');console.log(privKey);
        let privKeyRSA = deserializeRSAKey(privKey);

        window.location.href='/secureChat';
      }
      else if(!sessionStorage.getItem('privKeyRSA'))
      {
        const options = {
            method: 'GET',
            headers: {
                'authorization': 'token '+ accessToken,
            }
        }
        var res = await fetch('/checkE2ERegisterAPI?senderID='+myID+'&receiverID='+000, options);
        var json_res = await res.json();console.log(json_res)
        if(json_res.data == 'ng')
        {
          window.open('/registerE2EService');
        }
        else if( json_res.data =='ok')
        {
          var privKeyModal = document.getElementById("privKeyModal");
          privKeyModal.style.display = "block";
        }
      }
    }

    async function checkAndSaveKey()
    {
      var privKeyString = document.getElementById('PrivKeycontent').value; console.log(privKeyString);
      var Bits = 1024; 
 
      var MessRSAkey = cryptico.generateRSAKey(privKeyString, Bits); console.log(MessRSAkey);

      var MessRSAkeyPublic = cryptico.publicKeyString(MessRSAkey); console.log(MessRSAkeyPublic)

      let serialKey = serializeRSAKey(MessRSAkey); 
     
      const options ={
              method:'POST',
              body: JSON.stringify({'publicKeyRSA': MessRSAkeyPublic}),
                      headers:{
                          'Content-Type': 'application/json',
                          'authorization': 'token '+ accessToken,
                      }
            }
      var res = await fetch('/verifyPrivKeyRSA', options);
      var json_res = await res.json();
      if(json_res.data=='ok')
      {
        console.log('ok');
        sessionStorage.setItem('privKeyRSA', serialKey);
        privKeyModal.style.display = "none";
        window.location.href='/secureChat';
      }
      else if(json_res.data=='ng')
      {
        alert('wrong private Key');
      }
    }

</script>